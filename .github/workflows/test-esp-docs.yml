# name: Test Esp-Docs

# on:
#   pull_request:
#   push:
#     branches:
#       - main

# defaults:
#   run:
#     shell: bash

# jobs:
#   build-python-packages:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '3.7'
#       - run: |
#           pip install -U pip
#           pip install flit
#           flit build
#       - name: Upload built python packages
#         uses: actions/upload-artifact@v3
#         with:
#           name: wheel
#           path: dist/esp_docs-*-py3-none-any.whl

  # test-esp-docs-ut:
  #   runs-on: ubuntu-latest
  #   needs: build-python-packages
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.7'
  #     - name: Download wheel
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheel
  #     - run: |
  #         pip install -U pip
  #         pip install esp_docs-*-py3-none-any.whl
  #         cd test/unit_tests
  #         python test_docs.py
  #         python test_esp_extensions.py
  #         python test_deploy.py

  # test-esp-docs-build:
  #   runs-on: ubuntu-latest
  #   needs: build-python-packages
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.7'
  #     - name: Download wheel
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheel
  #     - run: |
  #         pip install -U pip
  #         pip install esp_docs-*-py3-none-any.whl
  #         sudo apt update && sudo apt install -y doxygen latexmk texlive-latex-recommended texlive-fonts-recommended texlive-xetex fonts-freefont-otf
  #         cd test/build_tests
  #         ./build_all.sh

  # build-esp-docs-examples-basic:
  #   runs-on: ubuntu-latest
  #   needs: build-python-packages
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.7'
  #     - name: Download wheel
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheel
  #     - run: |
  #         pip install -U pip
  #         pip install esp_docs-*-py3-none-any.whl
  #         cd examples/basic
  #         ./build_example.sh

  # build-esp-docs-examples-doxygen:
  #   runs-on: ubuntu-latest
  #   needs: build-python-packages
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.7'
  #     - name: Download wheel
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheel
  #     - run: |
  #         pip install -U pip
  #         pip install esp_docs-*-py3-none-any.whl
  #         sudo apt update && sudo apt install -y doxygen
  #         cd examples/doxygen
  #         ./build_example.sh

  # build-esp-idf-docs:
  #   runs-on: ubuntu-latest
  #   needs: build-python-packages
  #   container: espressif/idf:v5.1
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.7'
  #     - name: Download wheel
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: wheel
  #     - name: Build docs for esp-idf
  #       shell: bash
  #       run: |
  #         ${IDF_PATH}/install.sh
  #         . ${IDF_PATH}/export.sh
  #         apt update && apt install -y libffi-dev libcairo2-dev doxygen
  #         pip install esp_docs-*-py3-none-any.whl
  #         cd ${IDF_PATH}/docs
  #         build-docs -t esp32 -l en